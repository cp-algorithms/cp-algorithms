<?xml version="1.0" encoding="UTF-8" ?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel> <title>Algorithms for Competitive Programming</title><description>The goal of this project is to translate the wonderful resource http://e-maxx.ru/algo which provides descriptions of many algorithms and data structures especially popular in field of competitive programming. Moreover we want to improve the collected knowledge by extending the articles and adding new articles to the collection.</description><link>https://cp-algorithms.com/</link><atom:link href="https://cp-algorithms.com/feed_rss_updated.xml" rel="self" type="application/rss+xml" /> <docs>https://github.com/cp-algorithms/cp-algorithms</docs><language>en</language> <pubDate>Wed, 29 Oct 2025 17:24:06 -0000</pubDate> <lastBuildDate>Wed, 29 Oct 2025 17:24:06 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.4</generator> <image> <url>None</url> <title>Algorithms for Competitive Programming</title> <link>https://cp-algorithms.com/</link> </image> <item> <title>Garner&#39;s Algorithm</title> <description>&lt;h1&gt;Garner&#39;s algorithm&lt;/h1&gt; &lt;p&gt;A consequence of the &lt;a href=&#34;chinese-remainder-theorem.md&#34;&gt;Chinese Remainder Theorem&lt;/a&gt; is, that we can represent big numbers using an array of ...&lt;/p&gt;</description> <link>https://cp-algorithms.com/algebra/garners-algorithm.html</link> <pubDate>Wed, 29 Oct 2025 17:23:37 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/garners-algorithm.html</guid> </item> <item> <title>Linear Diophantine Equations</title> <description>&lt;h1&gt;Linear Diophantine Equation&lt;/h1&gt; &lt;p&gt;A Linear Diophantine Equation (in two variables) is an equation of the general form:&lt;/p&gt; &lt;p&gt;$$ax + by = c$$&lt;/p&gt; &lt;p&gt;where $a$, $b$, $c$ are...&lt;/p&gt;</description> <link>https://cp-algorithms.com/algebra/linear-diophantine-equation.html</link> <pubDate>Wed, 29 Oct 2025 17:22:34 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/linear-diophantine-equation.html</guid> </item> <item> <title>Floyd-Warshall - finding all shortest paths</title> <description>&lt;h1&gt;Floyd-Warshall Algorithm&lt;/h1&gt; &lt;p&gt;Given a directed or an undirected weighted graph $G$ with $n$ vertices. The task is to find the length of the shortest path $d_{i...&lt;/p&gt;</description> <link>https://cp-algorithms.com/graph/all-pair-shortest-path-floyd-warshall.html</link> <pubDate>Sat, 25 Oct 2025 00:41:59 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/all-pair-shortest-path-floyd-warshall.html</guid> </item> <item> <title>Extended Euclidean Algorithm</title> <description>&lt;h1&gt;Extended Euclidean Algorithm&lt;/h1&gt; &lt;p&gt;While the &lt;a href=&#34;euclid-algorithm.md&#34;&gt;Euclidean algorithm&lt;/a&gt; calculates only the greatest common divisor (GCD) of two integers $a$ an...&lt;/p&gt;</description> <link>https://cp-algorithms.com/algebra/extended-euclid-algorithm.html</link> <pubDate>Sun, 12 Oct 2025 14:21:08 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/extended-euclid-algorithm.html</guid> </item> <item> <title>Finding the nearest pair of points</title> <description>&lt;h1&gt;Finding the nearest pair of points&lt;/h1&gt; &lt;h2&gt;Problem statement&lt;/h2&gt; &lt;p&gt;Given $n$ points on the plane. Each point $p_i$ is defined by its coordinates $(x_i,y_i)$. It is ...&lt;/p&gt;</description> <link>https://cp-algorithms.com/geometry/nearest_points.html</link> <pubDate>Tue, 07 Oct 2025 21:40:34 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/nearest_points.html</guid> </item> <item> <title>2-SAT</title> <description>&lt;h1&gt;2-SAT&lt;/h1&gt; &lt;p&gt;SAT (Boolean satisfiability problem) is the problem of assigning Boolean values to variables to satisfy a given Boolean formula. The Boolean formul...&lt;/p&gt;</description> <link>https://cp-algorithms.com/graph/2SAT.html</link> <pubDate>Wed, 01 Oct 2025 17:18:27 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/2SAT.html</guid> </item> <item> <title>Sparse Table</title> <description>&lt;h1&gt;Sparse Table&lt;/h1&gt; &lt;p&gt;Sparse Table is a data structure, that allows answering range queries. It can answer most range queries in $O(\log n)$, but its true power is...&lt;/p&gt;</description> <link>https://cp-algorithms.com/data_structures/sparse-table.html</link> <pubDate>Fri, 26 Sep 2025 04:55:43 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/sparse-table.html</guid> </item> <item> <title>Longest increasing subsequence</title> <description>&lt;h1&gt;Longest increasing subsequence&lt;/h1&gt; &lt;p&gt;We are given an array with $n$ numbers: $a[0 \dots n-1]$. The task is to find the longest, strictly increasing, subsequence...&lt;/p&gt;</description> <link>https://cp-algorithms.com/dynamic_programming/longest_increasing_subsequence.html</link> <pubDate>Sun, 21 Sep 2025 22:22:46 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/longest_increasing_subsequence.html</guid> </item> <item> <title>Minimum Enclosing Circle</title> <description>&lt;h1&gt;Minimum Enclosing Circle&lt;/h1&gt; &lt;p&gt;Consider the following problem:&lt;/p&gt; &lt;p&gt;!!! example &#34;[Library Checker - Minimum Enclosing Circle](https://judge.yosupo.jp/problem/minimu...&lt;/p&gt;</description> <link>https://cp-algorithms.com/geometry/enclosing-circle.html</link> <pubDate>Sun, 21 Sep 2025 09:00:38 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/enclosing-circle.html</guid> </item> <item> <title>Tortoise and Hare Algorithm (Linked List cycle detection)</title> <description>&lt;h1&gt;Floyd&#39;s Linked List Cycle Finding Algorithm&lt;/h1&gt; &lt;p&gt;Given a linked list where the starting point of that linked list is denoted by &lt;strong&gt;head&lt;/strong&gt;, and there may or may ...&lt;/p&gt;</description> <link>https://cp-algorithms.com/others/tortoise_and_hare.html</link> <pubDate>Sun, 21 Sep 2025 00:17:26 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/others/tortoise_and_hare.html</guid> </item> <item> <title>Knuth&#39;s Optimization</title> <description>&lt;h1&gt;Knuth&#39;s Optimization&lt;/h1&gt; &lt;p&gt;Knuth&#39;s optimization, also known as the Knuth-Yao Speedup, is a special case of dynamic programming on ranges, that can optimize the ...&lt;/p&gt;</description> <link>https://cp-algorithms.com/dynamic_programming/knuth-optimization.html</link> <pubDate>Sat, 13 Sep 2025 20:34:18 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/knuth-optimization.html</guid> </item> <item> <title>0-1 BFS</title> <description>&lt;h1&gt;0-1 BFS&lt;/h1&gt; &lt;p&gt;It is well-known, that you can find the shortest paths between a single source and all other vertices in $O(|E|)$ using [Breadth First Search](bre...&lt;/p&gt;</description> <link>https://cp-algorithms.com/graph/01_bfs.html</link> <pubDate>Wed, 10 Sep 2025 11:31:43 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/01_bfs.html</guid> </item> <item> <title>Bellman-Ford - finding shortest paths with negative weights</title> <description>&lt;h1&gt;Bellman-Ford Algorithm&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;Single source shortest path with negative weight edges&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Suppose that we are given a weighted directed graph $G$ with $n$ vertic...&lt;/p&gt;</description> <link>https://cp-algorithms.com/graph/bellman_ford.html</link> <pubDate>Wed, 10 Sep 2025 10:29:18 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/bellman_ford.html</guid> </item> <item> <title>Finding a Negative Cycle in the Graph</title> <description>&lt;h1&gt;Finding a negative cycle in the graph&lt;/h1&gt; &lt;p&gt;You are given a directed weighted graph $G$ with $N$ vertices and $M$ edges. Find any cycle of negative weight in it...&lt;/p&gt;</description> <link>https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html</link> <pubDate>Wed, 10 Sep 2025 06:18:21 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html</guid> </item> <item> <title>Search for a pair of intersecting segments</title> <description>&lt;h1&gt;Search for a pair of intersecting segments&lt;/h1&gt; &lt;p&gt;Given $n$ line segments on the plane. It is required to check whether at least two of them intersect with each ...&lt;/p&gt;</description> <link>https://cp-algorithms.com/geometry/intersecting_segments.html</link> <pubDate>Mon, 08 Sep 2025 18:45:21 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/intersecting_segments.html</guid> </item> <item> <title>Depth First Search</title> <description>&lt;h1&gt;Depth First Search&lt;/h1&gt; &lt;p&gt;Depth First Search is one of the main graph algorithms.&lt;/p&gt; &lt;p&gt;Depth First Search finds the lexicographical first path in the graph from a so...&lt;/p&gt;</description> <link>https://cp-algorithms.com/graph/depth-first-search.html</link> <pubDate>Wed, 27 Aug 2025 05:43:56 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/depth-first-search.html</guid> </item> <item> <title>Introduction to Dynamic Programming</title> <description>&lt;h1&gt;Introduction to Dynamic Programming&lt;/h1&gt; &lt;p&gt;The essence of dynamic programming is to avoid repeated calculation. Often, dynamic programming problems are naturall...&lt;/p&gt;</description> <link>https://cp-algorithms.com/dynamic_programming/intro-to-dp.html</link> <pubDate>Tue, 26 Aug 2025 00:25:28 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/intro-to-dp.html</guid> </item> <item> <title>Z-function</title> <description>&lt;h1&gt;Z-function and its calculation&lt;/h1&gt; &lt;p&gt;Suppose we are given a string $s$ of length $n$. The &lt;strong&gt;Z-function&lt;/strong&gt; for this string is an array of length $n$ where the $i$...&lt;/p&gt;</description> <link>https://cp-algorithms.com/string/z-function.html</link> <pubDate>Mon, 25 Aug 2025 18:21:57 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/string/z-function.html</guid> </item> <item> <title>Finding Bridges in O(N+M)</title> <description>&lt;h1&gt;Finding bridges in a graph in $O(N+M)$&lt;/h1&gt; &lt;p&gt;We are given an undirected graph. A bridge is defined as an edge which, when removed, makes the graph disconnected ...&lt;/p&gt;</description> <link>https://cp-algorithms.com/graph/bridge-searching.html</link> <pubDate>Mon, 25 Aug 2025 17:30:05 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/bridge-searching.html</guid> </item> <item> <title>Check if points belong to the convex polygon in O(log N)</title> <description>&lt;h1&gt;Check if point belongs to the convex polygon in $O(\log N)$&lt;/h1&gt; &lt;p&gt;Consider the following problem: you are given a convex polygon with integer vertices and a lot...&lt;/p&gt;</description> <link>https://cp-algorithms.com/geometry/point-in-convex-polygon.html</link> <pubDate>Mon, 25 Aug 2025 17:16:53 +0000</pubDate> <source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/point-in-convex-polygon.html</guid> </item> </channel> </rss>